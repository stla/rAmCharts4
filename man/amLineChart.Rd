% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amLineChart.R
\name{amLineChart}
\alias{amLineChart}
\title{HTML widget displaying a line chart}
\usage{
amLineChart(
  data,
  data2 = NULL,
  xValue,
  yValues,
  yValueNames = NULL,
  xLimits = NULL,
  yLimits = NULL,
  expandX = 0,
  expandY = 5,
  Xformatter = ifelse(isDate, "yyyy-MM-dd", "#."),
  Yformatter = "#.",
  trend = FALSE,
  chartTitle = NULL,
  theme = NULL,
  draggable = FALSE,
  tooltip = NULL,
  bullets = NULL,
  alwaysShowBullets = FALSE,
  lineStyle = NULL,
  backgroundColor = NULL,
  xAxis = NULL,
  yAxis = NULL,
  scrollbarX = FALSE,
  scrollbarY = FALSE,
  gridLines = NULL,
  legend = NULL,
  caption = NULL,
  image = NULL,
  button = NULL,
  cursor = FALSE,
  width = NULL,
  height = NULL,
  chartId = NULL,
  elementId = NULL
)
}
\arguments{
\item{data}{a dataframe}

\item{data2}{\code{NULL} or a dataframe used to update the data with the
button; its column names must include the column names of \code{data}
given in \code{values} and it must have the same number of rows as
\code{data}}

\item{xValue}{name of the column of \code{data} to be used on the
x-axis}

\item{yValues}{name(s) of the column(s) of \code{data} to be used on the
y-axis}

\item{yValueNames}{names of the variables on the y-axis,
to appear in the legend;
\code{NULL} to use \code{yValues} as names, otherwise a named list of the
form \code{list(yvalue1 = "ValueName1", yvalue2 = "ValueName2", ...)} where
\code{yvalue1}, \code{yvalue2}, ... are the column names given in
\code{yValues} and \code{"ValueName1"}, \code{"ValueName2"}, ... are the
desired names to appear in the legend}

\item{xLimits}{range of the x-axis, a vector of two values specifying
the left and the right limits of the x-axis; \code{NULL} for default values}

\item{yLimits}{range of the y-axis, a vector of two values specifying
the lower and the upper limits of the y-axis; \code{NULL} for default values}

\item{expandX}{if \code{xLimits = NULL}, a percentage of the range of the
x-axis used to expand this range}

\item{expandY}{if \code{yLimits = NULL}, a percentage of the range of the
y-axis used to expand this range}

\item{Xformatter}{a
\href{https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/}{number formatting string}
if \code{xValue} is set to a numeric column of \code{data};
it is used to format the values displayed in the cursor tooltips if
\code{cursor = TRUE}, the labels of the x-axis unless you specify
your own formatter in the \code{labels} field of the list passed on to
the \code{xAxis} option, and the values displayed in the tooltips unless
you specify your own tooltip text;
if \code{xValue} is set to a date column of \code{data}, this option should
be set to a
\href{https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/}{date formatting string},
and it has an effect only on the values displayed in the tooltips (unless
you specify your own tooltip text); formatting the dates on the x-axis is
done via the \code{labels} field of the list passed on to the \code{xAxis}
option}

\item{Yformatter}{a
\href{https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/}{number formatting string};
it is used to format the values displayed in the cursor tooltips if
\code{cursor = TRUE}, the labels of the y-axis unless you specify
your own formatter in the \code{labels} field of the list passed on to
the \code{yAxis} option, and the values displayed in the tooltips unless
you specify your own tooltip text (see the first example of
\code{\link{amBarChart}} for the way to set
a number formatter in the tooltip text)}

\item{trend}{option to request trend lines and to set their settings;
\code{FALSE} for no trend line, otherwise a named list of the form
\code{list(yvalue1 = trend1, yvalue2 = trend2, ...)} where
\code{trend1}, \code{trend2}, ... are lists with the following fields:
\describe{
  \item{\code{method}}{
    the modelling method, can be \code{"lm"}, \code{"lm.js"}, \code{"nls"},
    \code{"nlsLM"}, or \code{"loess"}; \code{"lm.js"} performs a polynomial
    regression in JavaScript, its advantage is that the fitted regression
    line is updated when the points of the line are dragged
  }
  \item{\code{formula}}{
    a formula passed on to the modelling function for methods \code{"lm"},
    \code{"nls"} or \code{"nlsLM"}; the
    lefthandside of this formula must always be \code{y}, and its
    righthandside must be a symbolic expression depending on \code{x} only,
    e.g. \code{y ~ x}, \code{y ~ x + I(x^2)}, \code{y ~ poly(x,2)}
  }
  \item{\code{interval}}{
    effective for method \code{"lm"} only; a list with five possible fields:
    \code{type} can be \code{"confidence"} or \code{"prediction"},
    \code{level} is the confidence or prediction level (number between 0
    and 1), \code{color} is the color of the shaded area, \code{opacity}
    is the opacity of the shaded area (number between 0 and 1),
    \code{tensionX} and \code{tensionY} to control the smoothing
    (see \code{\link{amLine}})
  }
  \item{\code{order}}{
    the order of the polynomial regression when \code{method = "lm.js"}
  }
  \item{\code{method.args}}{
    a list of additional arguments passed on to the modelling function
    defined by \code{method} for methods \code{"nls"}, \code{"nlsLM"} or
    \code{"loess"}, e.g. \code{method.args = list(span = 0.3)} for
    method \code{"loess"}
  }
  \item{\code{style}}{
    a list of settings for the trend line created with \code{\link{amLine}}
  }
}
it is also possible to request the same kind of trend lines for all series
given by the \code{yValues} argument, by passing a list of the
form \code{list("_all" = trendconfig)}, e.g.
\code{list("_all" = list(method = "lm", formula = y ~ 0+x, style = amLine()))}}

\item{chartTitle}{chart title, \code{NULL}, character, or list of settings}

\item{theme}{theme, \code{NULL} or one of \code{"dataviz"},
\code{"material"}, \code{"kelly"}, \code{"dark"}, \code{"moonrisekingdom"},
\code{"frozen"}, \code{"spiritedaway"}, \code{"patterns"},
\code{"microchart"}}

\item{draggable}{\code{TRUE}/\code{FALSE} to enable/disable dragging of
all lines, otherwise a named list of the form
\code{list(yvalue1 = TRUE, yvalue2 = FALSE, ...)} to enable/disable the
dragging for each bar corresponding to a column given in \code{yValues}}

\item{tooltip}{settings of the tooltips; \code{NULL} for default,
\code{FALSE} for no tooltip, otherwise a named list of the form
\code{list(yvalue1 = settings1, yvalue2 = settings2, ...)} where
\code{settings1}, \code{settings2}, ... are lists created with
\code{\link{amTooltip}}; this can also be a
single list of settings that will be applied to each series,
or a just a string for the text to display in the tooltip}

\item{bullets}{settings of the bullets; \code{NULL} for default,
otherwise a named list of the form
\code{list(yvalue1 = settings1, yvalue2 = settings2, ...)} where
\code{settings1}, \code{settings2}, ... are lists created with
\code{\link{amCircle}}, \code{\link{amTriangle}} or
\code{\link{amRectangle}}; this can also be a
single list of settings that will be applied to each series}

\item{alwaysShowBullets}{logical, whether the bullets should always be
visible, or visible on hover only}

\item{lineStyle}{settings of the lines; \code{NULL} for default,
otherwise a named list of the form
\code{list(yvalue1 = settings1, yvalue2 = settings2, ...)} where
\code{settings1}, \code{settings2}, ... are lists created with
\code{\link{amLine}}; this can also be a
single list of settings that will be applied to each line}

\item{backgroundColor}{a color for the chart background}

\item{xAxis}{settings of the x-axis given as a list, or just a string
for the axis title; the list of settings has three possible fields:
a field \code{title}, a list of settings for the axis title,
a field \code{labels}, a list of settings for the axis labels created
with \code{\link{amAxisLabels}},
and a field \code{adjust}, a number defining the vertical adjustment of
the axis (in pixels)}

\item{yAxis}{settings of the y-axis given as a list, or just a string
for the axis title; the list of settings has three possible fields:
a field \code{title}, a list of settings for the axis title,
a field \code{labels}, a list of settings for the axis labels created
with \code{\link{amAxisLabels}},
and a field \code{adjust}, a number defining the horizontal adjustment of
the axis (in pixels)}

\item{scrollbarX}{logical, whether to add a scrollbar for the x-axis}

\item{scrollbarY}{logical, whether to add a scrollbar for the y-axis}

\item{gridLines}{settings of the grid lines}

\item{legend}{logical, whether to display the legend}

\item{caption}{settings of the caption, or \code{NULL} for no caption}

\item{image}{option to include an image in the chart; \code{NULL} or
\code{FALSE} for no image, otherwise a named list with six possible fields:
the field \code{base64} (required) is a base64 string representing the
image (you can create it from a file with \code{base64enc::dataURI}),
the fields \code{width} and \code{height} define the image dimensions,
the field \code{position} can be \code{"topleft"}, \code{"topright"},
\code{"bottomleft"} or \code{"bottomright"}, the field \code{hjust}
defines the horizontal adjustment, and the field \code{vjust} defines
the vertical adjustment}

\item{button}{\code{NULL} for the default, \code{FALSE} for no button,
a single character string giving the button label,
or settings of the button given as
a list with these fields: \code{text} for the button label, \code{color} for
the label color, \code{fill} for the button color, and \code{position}
for the button position as a percentage (\code{0} for bottom,
\code{1} for top); this button is used to replace the current data
with \code{data2}}

\item{cursor}{option to add a cursor on the chart; \code{FALSE} for no
cursor, \code{TRUE} for a cursor for both axes with default settings
for the axes tooltips,
otherwise a named list with three possible fields: a field
\code{axes} to specify the axes for which the cursor is requested, can be
\code{"x"}, \code{"y"}, or \code{"xy"},
a field \code{tooltip} to set the style of the axes tooltips, this
must be a list of settings created with \code{\link{amTooltip}}, and a
field \code{extraTooltipPrecision}, a named list of the form
\code{list(x = i, y = j)} where \code{i} and \code{j} are the desired
numbers of additional decimals for the tooltips on the x-axis and
on the y-axis respectively}

\item{width}{the width of the chart, e.g. \code{"600px"} or \code{"80\%"};
ignored if the chart is displayed in Shiny, in which case the width is
given in \code{\link{amChart4Output}}}

\item{height}{the height of the chart, e.g. \code{"400px"};
ignored if the chart is displayed in Shiny, in which case the width is
given in \code{\link{amChart4Output}}}

\item{chartId}{a HTML id for the chart}

\item{elementId}{a HTML id for the container of the chart; ignored if the
chart is displayed in Shiny, in which case the id is given by the Shiny id}
}
\description{
Create a HTML widget displaying a line chart.
}
\note{
A color can be given by the name of a R color, the name of a CSS
color, e.g. \code{"transparent"} or \code{"fuchsia"}, an HEX code like
\code{"#ff009a"}, a RGB code like \code{"rgb(255,100,39)"}, or a HSL code
like \code{"hsl(360,11,255)"}.
}
\examples{
# a line chart with numeric x-axis ####

set.seed(666)
dat <- data.frame(
  x = 1:10,
  y1 = rnorm(10),
  y2 = rnorm(10)
)

amLineChart(
  data = dat,
  width = "700px",
  xValue = "x",
  yValues = c("y1", "y2"),
  yValueNames = list(y1 = "Sample 1", y2 = "Sample 2"),
  trend = list(
    y1 = list(
      method = "lm.js",
      order = 3,
      style = amLine(color = "lightyellow", dash = "3,2")
    ),
    y2 = list(
      method = "loess",
      style = amLine(color = "palevioletred", dash = "3,2")
    )
  ),
  draggable = list(y1 = TRUE, y2 = FALSE),
  backgroundColor = "#30303d",
  tooltip = amTooltip(
    text = "[bold]({valueX},{valueY})[/]",
    textColor = "white",
    backgroundColor = "#101010",
    borderColor = "whitesmoke"
  ),
  bullets = list(
    y1 = amCircle(color = "yellow", strokeColor = "olive"),
    y2 = amCircle(color = "orangered", strokeColor = "darkred")
  ),
  alwaysShowBullets = TRUE,
  lineStyle = list(
    y1 = amLine(color = "yellow", width = 4),
    y2 = amLine(color = "orangered", width = 4)
  ),
  chartTitle = list(text = "Gaussian samples", color = "whitesmoke"),
  xAxis = list(title = list(text = "Observation",
                            fontSize = 21,
                            color = "silver"),
               labels = amAxisLabels(color = "whitesmoke",
                                     fontSize = 17)),
  yAxis = list(title = list(text = "Value",
                            fontSize = 21,
                            color = "silver"),
               labels = amAxisLabels(color = "whitesmoke",
                                     fontSize = 14)),
  yLimits = c(-3, 3),
  Yformatter = "#.00",
  caption = list(text = "[font-style:italic]try to drag the yellow line![/]",
                 color = "yellow"),
  gridLines = list(color = "whitesmoke",
                   opacity = 0.4,
                   width = 1),
  theme = "dark")


# line chart with date x-axis ####

library(lubridate)

set.seed(666)
dat <- data.frame(
  date = ymd(180101) + days(0:60),
  visits = rpois(61, 20)
)

amLineChart(
  data = dat,
  width = "750px",
  xValue = "date",
  yValues = "visits",
  draggable = TRUE,
  chartTitle = "Number of visits",
  xAxis = list(
    title = "Date",
    labels = amAxisLabels(
      formatter = amDateAxisFormatter(
        day = c("dt", "[bold]MMM[/] dt"),
        week = c("dt", "[bold]MMM[/] dt")
      )
    )
  ),
  yAxis = "Visits",
  xLimits = range(dat$date),
  yLimits = c(0, 35),
  backgroundColor = "whitesmoke",
  tooltip = paste0(
    "[bold][font-style:italic]{dateX.value.formatDate('yyyy/MM/dd')}[/]",
    "\nvisits: {valueY}[/]"
  ),
  caption = list(text = "Year 2018"),
  theme = "material")


# smoothed lines ####

x <- seq(-4, 4, length.out = 100)
dat <- data.frame(
  x = x,
  Gauss = dnorm(x),
  Cauchy = dcauchy(x)
)

amLineChart(
  data = dat,
  width = "700px",
  xValue = "x",
  yValues = c("Gauss", "Cauchy"),
  yValueNames = list(
    Gauss = "Standard normal distribution",
    Cauchy = "Cauchy distribution"
  ),
  draggable = FALSE,
  tooltip = FALSE,
  lineStyle = amLine(
    width = 4,
    tensionX = 0.8,
    tensionY = 0.8
  ),
  xAxis = list(title = list(text = "x",
                            fontSize = 21,
                            color = "navyblue"),
               labels = amAxisLabels(
                 color = "midnightblue",
                 fontSize = 17)),
  yAxis = list(title = list(text = "density",
                            fontSize = 21,
                            color = "navyblue"),
               labels = FALSE),
  theme = "dataviz")
}
