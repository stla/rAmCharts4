% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amHorizontalBarChart.R
\name{amHorizontalBarChart}
\alias{amHorizontalBarChart}
\title{Create a HTML widget displaying a horizontal bar chart}
\usage{
amHorizontalBarChart(
  data,
  data2 = NULL,
  category,
  values,
  valueNames = NULL,
  xLimits = NULL,
  expandX = 5,
  valueFormatter = "#.",
  chartTitle = NULL,
  theme = NULL,
  draggable = FALSE,
  tooltip = NULL,
  columnStyle = NULL,
  bullets = NULL,
  backgroundColor = NULL,
  cellWidth = NULL,
  columnWidth = NULL,
  xAxis = NULL,
  yAxis = NULL,
  scrollbarX = FALSE,
  scrollbarY = FALSE,
  gridLines = NULL,
  legend = NULL,
  caption = NULL,
  button = NULL,
  width = NULL,
  height = NULL,
  chartId = NULL,
  elementId = NULL
)
}
\arguments{
\item{data}{a dataframe}

\item{data2}{\code{NULL} or a dataframe used to update the data with the
button; its column names must include the column names of \code{data}
given in \code{values} and it must have the same number of rows as
\code{data}}

\item{category}{name of the column of \code{data} to be used on the
category axis}

\item{values}{name(s) of the column(s) of \code{data} to be used on the
value axis}

\item{valueNames}{names of the values variables, to appear in the legend;
\code{NULL} to use \code{values} as names, otherwise a named list of the
form \code{list(value1 = "ValueName1", value2 = "ValueName2", ...)} where
\code{value1}, \code{value2}, ... are the column names given in
\code{values} and \code{"ValueName1"}, \code{"ValueName2"}, ... are the
desired names to appear in the legend}

\item{xLimits}{range of the x-axis, a vector of two values specifying
the left and the right limits of the x-axis; \code{NULL} for default values}

\item{expandX}{if \code{xLimits = NULL}, a percentage of the range of the
x-axis used to expand this range}

\item{valueFormatter}{a number formatter; see
\url{https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/}}

\item{chartTitle}{chart title, \code{NULL}, character, or list of settings}

\item{theme}{theme, \code{NULL} or one of \code{"dataviz"},
\code{"material"}, \code{"kelly"}, \code{"dark"}, \code{"moonrisekingdom"},
\code{"frozen"}, \code{"spiritedaway"}, \code{"patterns"},
\code{"microchart"}}

\item{draggable}{\code{TRUE}/\code{FALSE} to enable/disable dragging of
all bars, otherwise a named list of the form
\code{list(value1 = TRUE, value2 = FALSE, ...)} to enable/disable the
dragging for each bar corresponding to a column given in \code{values}}

\item{tooltip}{settings of the tooltips; \code{NULL} for default,
\code{FALSE} for no tooltip, otherwise a named list of the form
\code{list(value1 = settings1, value2 = settings2, ...)} where
\code{settings1}, \code{settings2}, ... are lists created with
\code{\link{amTooltip}}; this can also be a
single list of settings that will be applied to each series,
or a just a string for the text to display in the tooltip}

\item{columnStyle}{settings of the columns; \code{NULL} for default,
otherwise a named list of the form
\code{list(value1 = settings1, value2 = settings2, ...)} where
\code{settings1}, \code{settings2}, ... are lists created with
\code{\link{amColumn}}; this can also be a
single list of settings that will be applied to each column}

\item{bullets}{settings of the bullets; \code{NULL} for default,
otherwise a named list of the form
\code{list(value1 = settings1, value2 = settings2, ...)} where
\code{settings1}, \code{settings2}, ... are lists created with
\code{\link{amCircle}}, \code{\link{amTriangle}} or
\code{\link{amRectangle}}; this can also be a
single list of settings that will be applied to each series}

\item{backgroundColor}{a color for the chart background}

\item{cellWidth}{cell width in percent; for a simple bar chart, this is the
width of the columns; for a grouped bar chart, this is the width of the
clusters of columns; \code{NULL} for the default value}

\item{columnWidth}{column width, a percentage of the cell width; set to 100
for a simple bar chart and use \code{cellWidth} to control the width of the
columns; for a grouped bar chart, this controls the spacing between the
columns within a cluster of columns; \code{NULL} for the default value}

\item{xAxis}{settings of the category axis given as a list, or just a string
for the axis title}

\item{yAxis}{settings of the value axis given as a list, or just a string
for the axis title}

\item{scrollbarX}{logical, whether to add a scrollbar for the category axis}

\item{scrollbarY}{logical, whether to add a scrollbar for the value axis}

\item{gridLines}{settings of the grid lines}

\item{legend}{logical, whether to display the legend}

\item{caption}{settings of the caption, or \code{NULL} for no caption}

\item{button}{\code{NULL} for the default, \code{FALSE} for no button,
a single character string giving the button label,
or settings of the button given as
a list with these fields: \code{text} for the button label, \code{color} for
the label color, \code{fill} for the button color, and \code{position}
for the button position as a percentage (\code{0} for bottom,
\code{1} for top); this button is used to replace the current data
with \code{data2}}

\item{width}{the width of the chart, e.g. \code{"600px"} or \code{"80\%"};
ignored if the chart is displayed in Shiny, in which case the width is
given in \code{\link{amChart4Output}}}

\item{height}{the height of the chart, e.g. \code{"400px"};
ignored if the chart is displayed in Shiny, in which case the width is
given in \code{\link{amChart4Output}}}

\item{chartId}{a HTML id for the chart}

\item{elementId}{a HTML id for the container of the chart; ignored if the
chart is displayed in Shiny, in which case the id is given by the Shiny id}
}
\description{
Create a HTML widget displaying a horizontal bar chart.
}
\note{
A color can be given by the name of a R color, the name of a CSS
color, e.g. \code{"transparent"} or \code{"fuchsia"}, an HEX code like
\code{"#ff009a"}, a RGB code like \code{"rgb(255,100,39)"}, or a HSL code
like \code{"hsl(360,11,255)"}.
}
\examples{
# a simple horizontal bar chart ####

dat <- data.frame(
  country = c("USA", "China", "Japan", "Germany", "UK", "France"),
  visits = c(3025, 1882, 1809, 1322, 1122, 1114)
)

amHorizontalBarChart(
  data = dat, data2 = dat,
  width = "600px", height = "550px",
  category = "country", values = "visits",
  draggable = TRUE,
  tooltip = "[font-style:italic #ffff00]{valueX}[/]",
  chartTitle =
    list(text = "Visits per country", fontSize = 22, color = "orangered"),
  xAxis = list(title = list(text = "Country", color = "maroon")),
  yAxis = list(title = list(text = "Visits", color = "maroon")),
  xLimits = c(0, 4000),
  valueFormatter = "#.",
  caption = list(text = "Year 2018", color = "red"),
  theme = "moonrisekingdom")

# a grouped horizontal bar chart ####

set.seed(666)
dat <- data.frame(
  country = c("USA", "China", "Japan", "Germany", "UK", "France"),
  visits = c(3025, 1882, 1809, 1322, 1122, 1114),
  income = rpois(6, 25),
  expenses = rpois(6, 20)
)

amHorizontalBarChart(
  data = dat,
  width = "700px",
  category = "country",
  values = c("income", "expenses"),
  valueNames = list(income = "Income", expenses = "Expenses"),
  tooltip = amTooltip(
    textColor = "white",
    backgroundColor = "#101010",
    borderColor = "silver"
  ),
  draggable = list(income = TRUE, expenses = FALSE),
  backgroundColor = "#30303d",
  columnStyle = list(
    income = amColumn(
      color = "darkmagenta",
      strokeColor = "#cccccc",
      strokeWidth = 2
    ),
    expenses = amColumn(
      color = "darkred",
      strokeColor = "#cccccc",
      strokeWidth = 2
    )
  ),
  chartTitle = list(text = "Income and expenses per country"),
  xAxis = list(title = list(text = "Country")),
  yAxis = list(title = list(text = "Income and expenses")),
  xLimits = c(0, 41),
  valueFormatter = "#.#",
  caption = list(text = "Year 2018"),
  theme = "dark")
}
